#!/usr/bin/env mage

# Comprehensive Mage Language Demo
# This script showcases most features of the mage language

incant "🔮✨ Comprehensive Mage Language Demo ✨🔮"
incant "============================================="
incant ""

# 1. Variables and Basic Operations
incant "📋 1. Variables and Basic Operations"
incant "-----------------------------------"
conjure name = "Mage Developer"
conjure version = "1.0.0"
conjure magic_number = 42

incant "👋 Hello, $name!"
incant "🎯 Mage Version: $version"
incant "✨ Magic Number: $magic_number"
incant ""

# 2. System Information
incant "🖥️  2. System Information"
incant "------------------------"
conjure os = cast platform()
conjure arch = cast architecture()
conjure home = cast home_directory()

incant "Platform: $os"
incant "Architecture: $arch"
incant "Home Directory: $home"
incant ""

# 3. Conditional Logic
incant "🤔 3. Conditional Logic"
incant "----------------------"
scry magic_number > 40 {
    incant "✅ Magic number is greater than 40!"
} lest {
    incant "❌ Magic number is not greater than 40"
}

scry os == "linux" {
    incant "🐧 Welcome, Linux user!"
} morph os == "windows" {
    incant "🪟 Welcome, Windows user!"
} morph os == "macos" {
    incant "🍎 Welcome, macOS user!"
} lest {
    incant "👽 Welcome, mysterious platform user!"
}
incant ""

# 4. Loops and Iteration
incant "🔄 4. Loops and Iteration"
incant "------------------------"
incant "Counting to 5:"
chant i from 1 to 5 {
    incant "  Count: $i"
}

incant "Even numbers from 2 to 10:"
chant i from 2 to 10 step 2 {
    incant "  Even: $i"
}
incant ""

# 5. File Operations (if not in CI)
incant "📁 5. File Operations"
incant "--------------------"
conjure test_file = "demo_test.txt"
conjure test_content = "Hello from Mage! This is a test file."

# Create a test file
cast write_file(test_file, test_content)

scry cast file_exists(test_file) {
    incant "✅ Test file created successfully!"
    
    # Read the file content
    conjure content = cast read_file(test_file)
    incant "📄 File content: $content"
    
    # Clean up
    cast remove_file(test_file)
    incant "🗑️  Test file cleaned up"
} lest {
    incant "❌ Failed to create test file"
}
incant ""

# 6. Package Manager Detection
incant "📦 6. Package Manager Detection"
incant "------------------------------"
conjure pm_list = cast detect_package_managers()
conjure primary_pm = cast get_primary_package_manager()

incant "Available package managers: $pm_list"
incant "Primary package manager: $primary_pm"

# Check specific package managers
scry cast package_manager_available("git") {
    incant "✅ Git is available as a package manager"
} lest {
    incant "❌ Git is not available as a package manager"
}
incant ""

# 7. Directory Operations
incant "📂 7. Directory Operations"
incant "-------------------------"
conjure current_dir = cast get_current_directory()
incant "Current directory: $current_dir"

conjure test_dir = "test_directory"
cast ensure_directory(test_dir)

scry cast directory_exists(test_dir) {
    incant "✅ Test directory created successfully!"
    
    # Clean up
    cast delete_directory(test_dir)
    incant "🗑️  Test directory cleaned up"
} lest {
    incant "❌ Failed to create test directory"
}
incant ""

# 8. Environment Variables
incant "🌍 8. Environment Variables"
incant "--------------------------"
conjure path_var = cast get_env("PATH")
scry path_var != "" {
    incant "✅ PATH environment variable found"
    # Don't print the full PATH as it's usually very long
    incant "   PATH length: ${#path_var} characters"
} lest {
    incant "❌ PATH environment variable not found"
}

# Set and get a custom environment variable
cast set_env("MAGE_TEST", "Hello World")
conjure mage_test = cast get_env("MAGE_TEST")
incant "Custom env var MAGE_TEST: $mage_test"
incant ""

# 9. String Operations and Functions
incant "🔤 9. String Operations"
incant "----------------------"
conjure greeting = "Hello, Magical World!"
conjure lowercase = cast to_lowercase(greeting)
conjure uppercase = cast to_uppercase(greeting)

incant "Original: $greeting"
incant "Lowercase: $lowercase"
incant "Uppercase: $uppercase"
incant ""

# 10. Mathematical Operations
incant "🔢 10. Mathematical Operations"
incant "-----------------------------"
conjure a = 10
conjure b = 5
conjure sum = cast add(a, b)
conjure product = cast multiply(a, b)

incant "$a + $b = $sum"
incant "$a × $b = $product"
incant ""

# 11. Interactive Features (skip in CI)
conjure is_ci = cast get_env("CI")
scry is_ci == "" {
    incant "🎮 11. Interactive Features"
    incant "-------------------------"
    incant "Note: Interactive features are available in non-CI environments"
    incant "Examples:"
    incant "  - Package search with multiple options"
    incant "  - User prompts and confirmations"
    incant "  - Interactive package installation"
} lest {
    incant "🎮 11. Interactive Features (Skipped in CI)"
    incant "------------------------------------------"
    incant "Interactive features are disabled in CI environments"
}
incant ""

# 12. Package Workflow Demo
incant "📦 12. Package Workflow Demo"
incant "---------------------------"
incant "Package workflow features:"
incant "  ✅ Project initialization"
incant "  ✅ Dependency management"
incant "  ✅ Cross-platform package detection"
incant "  ✅ Lock file generation"
incant "  ✅ Template system"
incant ""

# Final Summary
incant "🎉 Demo Complete!"
incant "================="
incant ""
incant "✨ You've seen the magic of mage language!"
incant ""
incant "Key features demonstrated:"
incant "  🔮 Magical syntax (conjure, incant, cast, scry)"
incant "  🌍 Cross-platform compatibility"
incant "  📦 Package management workflows"
incant "  📁 File and directory operations"
incant "  🔄 Loops and conditionals"
incant "  🌍 Environment variable handling"
incant "  🔤 String and math operations"
incant ""
incant "Ready to create your own magical automation scripts!"
incant "Visit https://github.com/yourusername/mage for more examples." 