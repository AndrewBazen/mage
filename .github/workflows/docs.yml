name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'README.md'
      - 'examples/**'
      - 'docs/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'README.md'
      - 'examples/**'
      - 'docs/**'
      - '.github/workflows/docs.yml'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build mage
      run: cargo build --release
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install documentation tools
      run: |
        npm install -g @mermaid-js/mermaid-cli
        npm install -g markdown-toc
    
    - name: Generate documentation
      run: |
        mkdir -p docs/generated
        
        # Generate command reference
        ./target/release/mage --help > docs/generated/command-reference.txt
        
        # Generate builtin functions reference
        echo "# Built-in Functions Reference" > docs/generated/builtins.md
        echo "" >> docs/generated/builtins.md
        echo "This is an auto-generated reference of all built-in functions in mage." >> docs/generated/builtins.md
        echo "" >> docs/generated/builtins.md
        
        # Extract builtin function documentation
        grep -n "fn.*builtin" src/builtins.rs | head -20 >> docs/generated/builtins.md || true
        
        # Generate example outputs
        echo "# Example Outputs" > docs/generated/examples.md
        echo "" >> docs/generated/examples.md
        
        # Run examples and capture output (non-interactive ones)
        echo "## System Information" >> docs/generated/examples.md
        echo '```' >> docs/generated/examples.md
        timeout 30s ./target/release/mage examples/system-info.mage >> docs/generated/examples.md 2>&1 || true
        echo '```' >> docs/generated/examples.md
        echo "" >> docs/generated/examples.md
        
        # Generate table of contents for README
        markdown-toc README.md --no-firsth1 > docs/generated/toc.md
    
    - name: Create documentation website
      run: |
        mkdir -p site
        
        # Create index.html
        cat > site/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
                 <head>
             <meta charset="UTF-8">
             <meta name="viewport" content="width=device-width, initial-scale=1.0">
             <title>Mage Language Documentation</title>
             <link rel="icon" type="image/png" href="assets/icons/mage64.png">
             <meta name="description" content="Mage Language - Cross-platform scripting and automation with magic">
             <meta property="og:title" content="Mage Language">
             <meta property="og:description" content="Cross-platform scripting and automation with magic">
             <meta property="og:image" content="assets/icons/mage64.png">
             <meta property="og:type" content="website">
             <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
             <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/themes/prism-tomorrow.min.css" rel="stylesheet">
             <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/components/prism-core.min.js"></script>
             <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/plugins/autoloader/prism-autoloader.min.js"></script>
         </head>
        <body class="bg-gray-900 text-white">
            <div class="container mx-auto px-4 py-8">
                                 <header class="text-center mb-12">
                     <div class="flex items-center justify-center mb-4">
                         <img src="assets/icons/mage64.png" alt="Mage Language Icon" class="w-16 h-16 mr-4">
                         <h1 class="text-5xl font-bold bg-gradient-to-r from-purple-400 to-pink-600 bg-clip-text text-transparent">
                             Mage Language
                         </h1>
                     </div>
                    <p class="text-xl text-gray-300">Cross-platform scripting and automation with magic</p>
                    <div class="mt-6 space-x-4">
                        <a href="#installation" class="bg-purple-600 hover:bg-purple-700 px-6 py-3 rounded-lg transition">
                            Get Started
                        </a>
                        <a href="#examples" class="bg-gray-700 hover:bg-gray-600 px-6 py-3 rounded-lg transition">
                            Examples
                        </a>
                        <a href="https://github.com/AndrewBazen/mage" class="bg-gray-700 hover:bg-gray-600 px-6 py-3 rounded-lg transition">
                            GitHub
                        </a>
                    </div>
                </header>
        
                <nav class="mb-8">
                    <ul class="flex flex-wrap justify-center space-x-6 text-lg">
                        <li><a href="#installation" class="hover:text-purple-400 transition">Installation</a></li>
                        <li><a href="#features" class="hover:text-purple-400 transition">Features</a></li>
                        <li><a href="#examples" class="hover:text-purple-400 transition">Examples</a></li>
                        <li><a href="#package-workflows" class="hover:text-purple-400 transition">Package Workflows</a></li>
                        <li><a href="#reference" class="hover:text-purple-400 transition">Reference</a></li>
                    </ul>
                </nav>
        
                <main>
                    <section id="installation" class="mb-12">
                        <h2 class="text-3xl font-bold mb-6">üöÄ Quick Installation</h2>
                        <div class="grid md:grid-cols-3 gap-6">
                            <div class="bg-gray-800 p-6 rounded-lg">
                                <h3 class="text-xl font-semibold mb-3">üêß Linux / üçé macOS</h3>
                                <pre class="bg-gray-900 p-3 rounded text-sm"><code>curl -sSL https://github.com/AndrewBazen/mage/raw/main/install.sh | bash</code></pre>
                            </div>
                            <div class="bg-gray-800 p-6 rounded-lg">
                                <h3 class="text-xl font-semibold mb-3">ü™ü Windows</h3>
                                <pre class="bg-gray-900 p-3 rounded text-sm"><code># Download from releases
# Or build from source</code></pre>
                            </div>
                            <div class="bg-gray-800 p-6 rounded-lg">
                                <h3 class="text-xl font-semibold mb-3">ü¶Ä From Source</h3>
                                <pre class="bg-gray-900 p-3 rounded text-sm"><code>git clone https://github.com/AndrewBazen/mage.git
cd mage
cargo build --release</code></pre>
                            </div>
                        </div>
                    </section>
        
                    <section id="features" class="mb-12">
                        <h2 class="text-3xl font-bold mb-6">‚ú® Features</h2>
                        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                            <div class="bg-gray-800 p-6 rounded-lg">
                                <h3 class="text-xl font-semibold mb-3">üì¶ Package Workflows</h3>
                                <p class="text-gray-300">Declarative dependency management with cross-platform support</p>
                            </div>
                            <div class="bg-gray-800 p-6 rounded-lg">
                                <h3 class="text-xl font-semibold mb-3">üåç Cross-Platform</h3>
                                <p class="text-gray-300">Runs on Linux, macOS, and Windows with platform detection</p>
                            </div>
                            <div class="bg-gray-800 p-6 rounded-lg">
                                <h3 class="text-xl font-semibold mb-3">üéÆ Interactive REPL</h3>
                                <p class="text-gray-300">Explore and test mage commands interactively</p>
                            </div>
                            <div class="bg-gray-800 p-6 rounded-lg">
                                <h3 class="text-xl font-semibold mb-3">üîß Built-in Functions</h3>
                                <p class="text-gray-300">Rich set of functions for file operations, networking, and more</p>
                            </div>
                            <div class="bg-gray-800 p-6 rounded-lg">
                                <h3 class="text-xl font-semibold mb-3">üéØ Magic Syntax</h3>
                                <p class="text-gray-300">Expressive language with conjure, incant, and cast keywords</p>
                            </div>
                            <div class="bg-gray-800 p-6 rounded-lg">
                                <h3 class="text-xl font-semibold mb-3">‚ö° Fast Execution</h3>
                                <p class="text-gray-300">Built in Rust for performance and reliability</p>
                            </div>
                        </div>
                    </section>
        
                    <section id="examples" class="mb-12">
                        <h2 class="text-3xl font-bold mb-6">üìù Quick Examples</h2>
                        <div class="space-y-6">
                            <div class="bg-gray-800 p-6 rounded-lg">
                                <h3 class="text-xl font-semibold mb-3">Hello World</h3>
                                <pre class="bg-gray-900 p-4 rounded"><code class="language-bash">incant "Hello, magical world!"</code></pre>
                            </div>
                            <div class="bg-gray-800 p-6 rounded-lg">
                                <h3 class="text-xl font-semibold mb-3">Variables and Conditionals</h3>
                                <pre class="bg-gray-900 p-4 rounded"><code class="language-bash">conjure platform = platform()
scry platform == "linux" {
    incant "Running on Linux! üêß"
} morph platform == "windows" {
    incant "Running on Windows! ü™ü"
} lest {
    incant "Running on $platform"
}</code></pre>
                            </div>
                            <div class="bg-gray-800 p-6 rounded-lg">
                                <h3 class="text-xl font-semibold mb-3">Package Management</h3>
                                <pre class="bg-gray-900 p-4 rounded"><code class="language-bash"># Initialize project
cast package_init("my-project")

# Add dependencies
cast package_add("git", "latest", false)
cast package_add("nodejs", ">=18.0.0", false)

# Install dependencies
cast package_install()</code></pre>
                            </div>
                            <div class="bg-gray-800 p-6 rounded-lg">
                                <h3 class="text-xl font-semibold mb-3">File Operations</h3>
                                <pre class="bg-gray-900 p-4 rounded"><code class="language-bash"># Create directories and files
cast ensure_directory("configs")
cast write_file("configs/app.json", '{"name": "Mage"}')

# Check if files exist
scry file_exists("configs/app.json") {
    incant "‚úÖ Config file created successfully"
}</code></pre>
                            </div>
                        </div>
                    </section>
        
                    <section id="package-workflows" class="mb-12">
                        <h2 class="text-3xl font-bold mb-6">üì¶ Package Workflows</h2>
                        <p class="text-lg text-gray-300 mb-6">
                            Mage includes a comprehensive package management system that supports multiple package sources,
                            cross-platform installation, and declarative dependency management.
                        </p>
                        <div class="bg-gray-800 p-6 rounded-lg">
                            <h3 class="text-xl font-semibold mb-3">Example mage.toml</h3>
                            <pre class="bg-gray-900 p-4 rounded"><code class="language-toml">[package]
name = "my-project"
version = "1.0.0"
description = "My awesome project"

[dependencies]
git = { version = "latest", source = "auto" }
nodejs = { version = ">=18.0.0", source = "auto" }

[dev-dependencies]
docker = { version = "latest", source = "auto" }

[scripts]
setup = "mage scripts/setup.mage"
build = "mage scripts/build.mage"</code></pre>
                        </div>
                    </section>
                </main>
        
                <footer class="text-center mt-16 pt-8 border-t border-gray-700">
                    <p class="text-gray-400">
                        Made with ‚ú® magic. 
                        <a href="https://github.com/AndrewBazen/mage" class="hover:text-purple-400 transition">View on GitHub</a>
                    </p>
                </footer>
            </div>
        </body>
        </html>
        EOF
        
        # Copy documentation files
        cp README.md site/
        cp -r examples site/
        
        # Copy assets (icons, etc.)
        if [ -d assets ]; then
            cp -r assets site/
        fi
        
        # Copy generated docs if they exist
        if [ -d docs/generated ]; then
            cp -r docs/generated site/
        fi
    
    - name: Upload documentation artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./site

  deploy-docs:
    name: Deploy Documentation
    if: github.ref == 'refs/heads/main'
    needs: build-docs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  validate-examples:
    name: Validate Examples
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Build mage
      run: cargo build --release
    
    - name: Validate example syntax
      run: |
        echo "üîç Validating example scripts..."
        
        # Find all .mage files in examples
        find examples -name "*.mage" -type f | while read file; do
            echo "Checking $file..."
            
            # Check if file can be parsed (dry run)
            if ./target/release/mage -c "# Parse check for $file" 2>/dev/null; then
                echo "‚úÖ $file syntax OK"
            else
                echo "‚ùå $file has syntax errors"
                exit 1
            fi
        done
        
        echo "‚úÖ All example scripts validated!"
    
    - name: Check documentation links
      run: |
        echo "üîç Checking documentation links..."
        
        # Check if all referenced files exist
        if [ -f examples/PACKAGE-WORKFLOWS.md ]; then
            echo "‚úÖ Package workflows documentation exists"
        else
            echo "‚ùå Package workflows documentation missing"
            exit 1
        fi
        
        # Check if example files exist
        for example in package-workflow-demo.mage web-project-setup.mage example-mage.toml; do
            if [ -f "examples/$example" ]; then
                echo "‚úÖ $example exists"
            else
                echo "‚ùå $example missing"
                exit 1
            fi
        done
        
        echo "‚úÖ All documentation links validated!" 