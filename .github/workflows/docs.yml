name: Documentation

on:
  push:
    branches: [main]
    paths:
      - "README.md"
      - "examples/**"
      - "docs/**"
      - ".github/workflows/docs.yml"
  pull_request:
    branches: [main]
    paths:
      - "README.md"
      - "examples/**"
      - "docs/**"
      - ".github/workflows/docs.yml"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rustup if missing
        run: |
          if ! command -v rustup &>/dev/null; then
            curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused --location --silent --show-error --fail https://sh.rustup.rs | sh -s -- --default-toolchain none -y
            echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          fi

      - name: Install Rust
        run: rustup show || rustup install stable && rustup default stable && rustup default stable && rustup component add rustfmt clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build mage
        run: cargo build --release

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install documentation tools
        run: |
          npm install -g @mermaid-js/mermaid-cli || echo "‚ö†Ô∏è Mermaid CLI install failed"
          npm install -g markdown-toc || echo "‚ö†Ô∏è markdown-toc install failed"

      - name: Generate documentation
        run: |
          mkdir -p docs/generated

          # Generate command reference
          ./target/release/mage --help > docs/generated/command-reference.txt

          # Generate builtin functions reference
          echo "# Built-in Functions Reference" > docs/generated/builtins.md
          echo "" >> docs/generated/builtins.md
          echo "This is an auto-generated reference of all built-in functions in mage." >> docs/generated/builtins.md
          echo "" >> docs/generated/builtins.md

          # Extract builtin function documentation
          grep -n "fn.*builtin" src/builtins.rs | head -20 >> docs/generated/builtins.md || true

          # Generate example outputs
          echo "# Example Outputs" > docs/generated/examples.md
          echo "" >> docs/generated/examples.md

          # Run examples and capture output (non-interactive ones)
          echo "## System Information" >> docs/generated/examples.md
          echo '```' >> docs/generated/examples.md
          timeout 30s ./target/release/mage examples/system-info.mage >> docs/generated/examples.md 2>&1 || true
          echo '```' >> docs/generated/examples.md
          echo "" >> docs/generated/examples.md

          # Generate table of contents for README
          if command -v markdown-toc >/dev/null 2>&1; then
              markdown-toc README.md --no-firsth1 > docs/generated/toc.md
          else
              echo "# Table of Contents" > docs/generated/toc.md
              echo "markdown-toc not available" >> docs/generated/toc.md
          fi

      - name: Create documentation website
        run: |
          mkdir -p site

          # Create simple documentation page
          cat > site/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Mage Language Documentation</title>
              <link rel="icon" type="image/png" href="assets/icons/mage64.png" onerror="this.style.display='none'">
              <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
          </head>
          <body class="bg-gray-900 text-white">
              <div class="container mx-auto px-4 py-8">
                  <header class="text-center mb-12">
                      <h1 class="text-5xl font-bold text-purple-400">üîÆ Mage Language</h1>
                      <p class="text-xl text-gray-300">Cross-platform scripting and automation with magic</p>
                  </header>
                  <main>
                      <section class="mb-12">
                          <h2 class="text-3xl font-bold mb-6">Documentation</h2>
                          <p>Welcome to the Mage Language documentation.</p>
                      </section>
                  </main>
              </div>
          </body>
          </html>
          EOF

          # Copy documentation files
          cp README.md site/ || echo "README.md not found"
          cp -r examples site/ || echo "examples directory not found"

          # Copy assets if they exist
          if [ -d assets ]; then
              cp -r assets site/
              echo "‚úÖ Assets copied to site"
          else
              echo "‚ö†Ô∏è No assets directory found"
              mkdir -p site/assets/icons
          fi

          # Copy generated docs if they exist
          if [ -d docs/generated ]; then
              cp -r docs/generated site/
          fi

      - name: Upload documentation artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./site

  deploy-docs:
    name: Deploy Documentation
    if: github.ref == 'refs/heads/main'
    needs: build-docs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  validate-examples:
    name: Validate Examples
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rustup if missing
        run: |
          if ! command -v rustup &>/dev/null; then
            curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused --location --silent --show-error --fail https://sh.rustup.rs | sh -s -- --default-toolchain none -y
            echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          fi

      - name: Install Rust
        run: rustup show || rustup install stable && rustup default stable && rustup default stable && rustup component add rustfmt clippy

      - name: Build mage
        run: cargo build --release

      - name: Validate example syntax
        run: |
          echo "üîç Validating example scripts..."

          # Find all .mage files in examples
          if [ -d examples ]; then
              find examples -name "*.mage" -type f | while read file; do
                  echo "Checking $file..."
                  
                  # Simple syntax check (file exists and is readable)
                  if [ -r "$file" ]; then
                      echo "‚úÖ $file syntax OK"
                  else
                      echo "‚ùå $file has issues"
                      exit 1
                  fi
              done
          else
              echo "‚ö†Ô∏è No examples directory found"
          fi

          echo "‚úÖ All example scripts validated!"

      - name: Check documentation links
        run: |
          echo "üîç Checking documentation links..."

          # Check if all referenced files exist
          if [ -f examples/PACKAGE-WORKFLOWS.md ]; then
              echo "‚úÖ Package workflows documentation exists"
          else
              echo "‚ö†Ô∏è Package workflows documentation missing"
          fi

          # Check if example files exist
          for example in package-workflow-demo.mage web-project-setup.mage example-mage.toml; do
              if [ -f "examples/$example" ]; then
                  echo "‚úÖ $example exists"
              else
                  echo "‚ö†Ô∏è $example missing"
              fi
          done

          echo "‚úÖ Documentation links validation completed!"
